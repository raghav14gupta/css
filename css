css3
//cascading style sheet

//3 ways to use css 

1.inline css - yaha hum style attriute ki help  se css ko use kr sakte hai
<!DOCTYPE html>
<html>
<head>
  <title>Inline CSS Example</title>
</head>
<body>  //body tag ke ander hi likha jata h ise
  <h1 style="color: blue; font-size: 24px;">Hello, Inline CSS!</h1> //ye style attribute ki help se kia
  <p style="font-family: Arial, sans-serif; line-height: 1.6;">This is an example of using inline CSS.</p>
  <p style="font-family: Arial, sans-serif; line-height: 1.6;"> </p>//
</body>
</html>

2.internal css
//yaha hum <style> tag ki help se css ko use krte hai
//ye tmhara head tag ke ander likha jaega not in body

<!DOCTYPE html>
<html>
<head>
  <title>Internal CSS Example</title>
  <style>
    /* Internal CSS */
    h1 {                            //isko selector bolte hai (tag name){
                                                     ander properties of css
                                                                         }

      color: blue;
      font-size: 24px;
    }

    p {                                 //benefit of using inline css -yaha pure html me ek sath hum sare tag pe property laga sakte h like jitte bhi p tag use hue honge sbme css apply hojaegi selector ki help se  //ye inline me possible ni tha vaha humko individually sare tag me style attrtibute use krna padhta tha

      font-family: Arial, sans-serif;
      line-height: 1.6;
    }
  </style>
</head>

3.external css
//yaha hum .css extension ki alag se file banate h fir usko html file se link krte h using link tag
//ye code modularity ko inc krta h bcz css code alag file me rhega html slag file me //more clean code
<!DOCTYPE html>
<html>
<head>
  <title>External CSS Example</title>
  <link rel="stylesheet" href="styles.css">//ye connect krna bhot jaruri h
</head>
<body>
  <h1>Hello, External CSS!</h1>
  <p>This is an example of using external CSS.</p>
</body>
</html>

.css page
/* styles.css */

h1 {
  color: blue;
  font-size: 24px;
}

  *********************inline vs internal vs external
  //kuch principle dhyan rakhne padhte h while writing the code
  1= SRP(single responsibility principle) yani ex- jaise.html file h to vo sirf html structure krne ka kaam hi kar ri ho ,, .css file h to usme sirf styling hi ho ri ho
  ye ni hona chaiyey ki humko css me changes krne h  tb bhi html file me jana pade
  is se redability kam hoti h user ki  not good to use

  2 = dry(dont repeat yourself
  ) same line of code ko baar baar repeat mt kro

  //inline
  ye SRP and DRY  dono pripncle ko violet krta h
  bcz html page me hi css ka kaam hora h
  //yaha har tag me alag se style attribute use krna padhta h ,
  <p> tag maanlo pure code me 100 baar use kia to 100 baar ptag me style attribute daalke css apply krni padegi.. baad me koe change krne hue ex-color chnge to 100 jaga color change krna padega

  //internal
  //ye bhi SRP princliple ko violet krta h bcz <style> tag ko hum html file me hi likhte h to add css
  //but ye DRY principle follow krta h
  directly hum selector ki help se sare tag ko ek baar me target kr sakte h
  //humko 100 jaga jaake koe style attribute add ni krna padhta

  //external
  ye SRP principle ko follow krta h bcz html code alag file me hota hai aur css code alag file m
  ye DRY principle ko bhi follow krta h bcz css me selector ki help se hum sare tag ko target kr sakte h ,,indivually jaake attribute add ni krna padhta
  //readability inc and reusability also

  ********************************************************************************************************
  important 
  //which css will apply if we use three of all
  1.inline,internal,external

  <!DOCTYPE html>
<html>
<head>
  <title>Order of Appearance in CSS</title>
  <link rel="stylesheet" href="styles.css">  //external with color blue in.css file

  <style>
    h1{
        color:red;   //internal css with red color
    }
   </style>

</head>

<body>

  <h1 style ="yellow"> raghav </h1>  //inline css with yellow color
</body>
</html>

//line by line read krte hai
jo color sbse last me apply hota h vahi reflect hoga
so inline css ka color reflect hoga h1 tag me  bcz ye body tag me ata h baaki dono head tag me hi apply hojate h to end me inline css sbko override krdeta h

important note//
internal or external order of appearance pe depend krte h bcz
<head> tag me
agar hum <link rel="stylesheet"> //external css phele likhe
aur
<style>  //internal css baad me
</style> 
 
 //to jo baad me likha jata h vhi override krdeta h iscase me internall css apply hoga over external
 //but agar hum order of appearnce change krde
 <style>  //inline phele likha
    </style>

    <link rel="stylesheet">  //external baad me

    //iss case me external css apply hoga ye override krdega interla css ko


    so  ****************************************
    inline css> baaki internal or external (order of appearnce pe depend karega unki jo hum likhe )
************************************************************************************************************

//box model
//koe bhi element create karenge vo hamesha box ki  form me hi banta h(element wrap hota h box m)
devtools ki help se inspect karke dekh bhi  sakte h jaise hi content pe hover karenge devtools me box form hoga content ke around

4 important things in box model
1.content(jo hum dete hai like hellow my name is raghav)
2.border
3.padding
4.margin

Content: The actual text inside the box.
Padding: The space between the content and the border.(ye border ke inside ki spacing hoti h)
Border: The line that goes around the padding and content.//its like a boundary around over content
Margin: The space outside the border that separates the element from other elements.
(ye border ke bahar ki spacing hoti h jo between 2 different box or element space provide krta hai)

***********************note
In CSS, the total height of a box includes the content height, padding, border, and margin.
same for width we use content width,padding,border,margin
User
if we give height:100px then
ChatGPT
If you set the height of an element to 100px, it refers to the height of the content area only, not including padding, border, or margin.


********************************************************************************************************8
 
selectors in css ***
//basically hum selector use krte hai taaki hum speciific element ko target kr sake jisko humko properties deni hai

selector{
  property:value;
}


types of selectors

1.simple selector
2.combinator selectors
3.pseudo-class selector
4.pseudo-element selectors
5.attribute selector

**********************
1.simple selector me
types hote h

1.tag/element selectors-
tagname/element name ki help se particular element ko style kr sakte h 
eg- h1(tag/element name){
  property:value;
}

2.id selectors  //# use hota h for id   with idname se target krte h particular id ko
 ye unique hota h yaha id ke hisab se element ko target krte h(har element ki id unique hogi)
 jis element me vo id hogi  vo target hoga yaha tag koe bhi ho us se koe mtlab ni yaha id ke base pe target krte h elemt ko
 (#id_name){
  property:value;
 }
3.class selector // . dot use hota h for class
ye multiple element me lag skta hai but condition h sbka class name same hona chaiyey(jb group me sbko same style krna ho tb sbko same class name dedo fir sbko ek sath target kr sakte h)
//yaha bhi element/tag koe bhi ho us se mtlab ni yaha class name ke basis pe target krte h element ko not on basis of tag name.
.(classname){
  property:value;
}
4.grouping selector 
different selectors ko ek sath use kr sakte h
iski help se hum group me alag alag element/class/id ko target kr sakte h jinko same styling deni ho
#one,.two,h1,p{    //yaha id bhi h,class bhi,tag/element vhi(comma ke through separate krte h)
    color: deeppink;
}

5.universal selector // 8 is used
ye basically sare element jitte bhi present h sbko style krdeta h 
*{
  property:value;
}

6.element class selector-ye tb useful hota h jb humko koe particular class ko alag dena hota h 
like-
<p class="raghav"></p>
<p class="raghav"></p>
<p class="raghav"></p>
<span class="raghav"></span>

yaha class name sbka same h but humko sirf spantag vali class ko style krna h
agar .classname se karenge to voto sari class me apply hojaega jinka same same h
iss case me element class selector kaam aata h
syntax-
(element/tagname).(dot)(className)
span.raghav{
  color:red;
}
*********************************************************************************************************
 
2.combinator selector- basically different type of selector ko ek sth use kr sakte hai
dom structure samjhna bhot jaruri h parent child relationship
<body> //ye root element h
  <div>  //level 1 (parent )
      <p>p1</p>  //level 2(ye child element hote h)
  </div>
  
  <h1>  //level 1
     <p>p2</p>  //level2(ye child element hote h)
  </h2>
  <p>p3</p3> //level 1
</body>     

ye <div>,<h1>,<p> ye sb aapas me siblings hai bcz ye hirerchial level pe same jaga h dom me
<p> unke ander ara h vo child h
**********************
syntax to use combinator-
1.reference element(jiske ander element ko search krna h jispe styling krni h) 2.combinator symbol 3.element to select(jis particular elements me styling deni h)
like -  div~p(div container ke ander  p element ko style krna h)


types of combinator selector-

1.general siblig selector -(~) denotion  //ye dono sibling pe work krte h
isme jaise hi reference element end hoga uske aage jitte bhi siblings hai(same level)(jo humko style krne they) vo style hojaenge

example- select all paragraphs which comes inside h1
yaani h1(reference element h) jisme humko p elemenrt search krke style krna h

<div>
<h1>raghav</h1> //rule -jaise hi reference element ka end hoga (reference element  jaha bhi end ho hamesha uske baad ka next sibling hi lena hota h)
<p>p1<p>   //uske sare  siblings ko style karenge
<p>p2<p>     //uske sare  siblings ko style karenge
<span>
<p>p3</p>  //ye style ni hoga bcz ye child h(level 2) not sibling(sibling same level vale hote h)
</span>
</div>

2.adjacent sibling selector -(+) denotion //ye dono sibling pe work krte h
ye sirf ek right adjacent element ko hi style krta h not more then that(jispe styling krni h)
like h1+p{

}  agar h1 end hone ke baad next adjancent me para present h to vo style hojaega ..agar koe dusra element present hua to style ni lagegi..and agar para hamara ek step baad aya(like h2 ke baad p present h )tb bhi styling apply ni hogi
bcz isme sirf next adjacent element hi style hota h jo humne pass kia tha
<h1>1</h1>
agar <p> iske just next aage hoga to styling hogi verna ni hogi
 

*********************************************************************
3.child selector -(>) denotion //ye child pe work krte h
ye sirf unko style krta h jo isse directly connect hai no grandchild allowed

<div> parent
   <p> child  //allowd
      <span>
          <p>  //grand child(not styling done in this)
**************************************************************
4.descendant selector-( with space ) denotion. //ye bhi child pe work krta hai
ye sare  element ko style krdeta h jo directly connect ho(childs) or indirectly connect ho as a (grand child)
<div> parent
   <p> child  //allowed
  <span>
          <p>  //grand child  //allowed
********************************
syntax to use combinator-
1.reference element(jiske ander element ko search krna h jispe styling krni h) 2.combinator symbol 3.element to select(jis particular elements me styling deni h)
like -  div~p(div container ke ander  p element ko style krna h)


***************************************************************************************8888
*****************************************************************************************

3.pseudo class selectors-
ye basically use krte hai hum jab humko apne element ki state ke uper styling krni ho -clicking,hovering ,etc
temporary styling hoti h like jbtk hum hover karenge,click karenge etc tbhi tk vo styling rhti hai mouse htaya styling gayab ..
basically ye hyperlinks aur input tag me jyada use hota h 

Certainly! Here are some common pseudo-class selectors in CSS:

:hover - Styles an element when the mouse pointer is over it.
:active - Styles an element that is currently being activated (e.g., clicked).
:focus - Styles an element that has gained focus.
:visited - Styles a link that has been visited by the user.
:first-child - Selects the first child element of its parent.
:last-child - Selects the last child element of its parent.
:nth-child(n) - Selects elements that match a specific position in a group of siblings.
basically ye hyperlinks aur input tag me jyada use hota h 
 ******************8
 <anchor tag me use hone vale pseudo classes></anchor>
state of hyperlink -
1.link -ye jb page load hota hai us time ki state h (bydefault blue hota h)
2.hover -jb mouse ko hover krte hai link ke uper
3.active -jb link pe click krke rakhte h(button pressed) to ye state aati hai
4.visited-jb click ko open krdete hai yaani button released(hote hi hum link visit kr lete hai)

syntax: selector(like tag,class,id ) : pseudo-class ( like state -hover,active,visited,focus,disable etc)
(ye colon hi represent krta h pseudo class ko)

for example  a:hover{
          color:blue;   //ye btara hai jaise hi hum hover karenge link pe color blue hojaega uska
}

//input tag me bhi use aate hai 

here are some commonly used pseudo-selectors for the <input> tag:

:hover - Styles the input when the mouse is over it, helpful for visual feedback.
:focus - Styles the input when it's selected or has focus, useful for indicating where a user is typing.
:disabled - Styles the input when it's disabled, useful for visually indicating non-interactable fields.
:valid - Styles the input when its value meets the specified validation criteria (e.g., a valid email or required format).
:invalid - Styles the input when its value doesn't meet the specified validation criteria.

example -The :focus pseudo-class selector is used to style an element when it gains focus, 
typically through user interaction like clicking or tabbing onto it, making it useful for indicating where a user's attention or cursor is on a webpage, 
especially in forms or interactive elements.

<style>
        input:focus{
            background-color: green;  //jaise hi hum input box me click karenenge uska bg color change hojaega
        }
    </style>

    *********************
    4.pseudo element selector- ye element ke kuch specific part me apply kr sakte hai 
    like kisi word ka first letter bada krdiya 
    like paragraph element ki specific first line ka font change krdiya ..etc 

    important************diff between pseudo class vs pseudo element selector 

 Pseudo-class selectors target specific states of elements (like :hover, :active, :focus) based on user interaction or state changes.

Pseudo-element selectors, on the other hand, target and style a specific part of an element (like ::before, ::after, ::first-line) rather than a state, 
allowing for the creation of virtual elements or styling specific parts of an element's content.

***
syntax - we use double :: in this pseudo element selector
selector(tag name,class,id etc)::pseudo-element(like before,after etc) {
  /* Styles */
}

types-- 
here are some common pseudo-element selectors with brief explanations:

::before - Inserts content before the selected element's content.//most imp
::after - Inserts content after the selected element's content.//most imp
::first-line - Styles the first line of text within an element.
::first-letter - Styles the first letter of the text within an element.
::selection - Styles the portion of text selected by a user.
::placeholder - Styles the placeholder text in an input or textarea element.
::backdrop - Styles the background behind an element when it's presented in fullscreen mode.

example--
selector::before {
  /* Styles */
  content: ""; /* Content to be inserted */
}
selector::after {
  /* Styles */
  content: ""; /* Content to be inserted */yaha kuch bhi de sakte h - text,image.,url etc
}


**************************************************************************************
4.attribute selectors -hum elements me more styling daal sakte hai with help of attributes
********************* 

element[attribute="value"] {                   like 
  /* Styles */ 
}

ex- input[type="text"]{
  color:green;   }

 ex- a[href^="https://"] {
    /* Styles for links starting with "https://" */
  }
 wex- img[src=".png"] {
    /* Styles for PNG images */
  }
  
  
code- 
let's say you have a list of links and you want to style links that open in a new tab 
(with the target="_blank" attribute):

<!DOCTYPE html>
<html>
<head>
  <title>Attribute Selector Example</title>
  <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
  <ul>
    <li><a href="https://example.com">Normal Link</a></li>
    <li><a href="https://example.com" target="_blank">Link - Opens in New Tab</a></li>
    <li><a href="https://example.com">Normal Link</a></li>
    <li><a href="https://example.com" target="_blank">Link - Opens in New Tab</a></li>
  </ul>
</body>
</html>
 //css 
 /* Styles links with target="_blank" attribute */
a[target="_blank"] {     //yha humne sare link pe styling applly krdi with help of attribute selector
  color: red;
  font-weight: bold;
  text-decoration: underline;
}
***********************************************************************************
****************************************************************************************8
*******************selectors over *********************************************************