css3
//cascading style sheet

//3 ways to use css 

1.inline css - yaha hum style attriute ki help  se css ko use kr sakte hai
<!DOCTYPE html>
<html>
<head>
  <title>Inline CSS Example</title>
</head>
<body>  //body tag ke ander hi likha jata h ise
  <h1 style="color: blue; font-size: 24px;">Hello, Inline CSS!</h1> //ye style attribute ki help se kia
  <p style="font-family: Arial, sans-serif; line-height: 1.6;">This is an example of using inline CSS.</p>
  <p style="font-family: Arial, sans-serif; line-height: 1.6;"> </p>//
</body>
</html>

2.internal css
//yaha hum <style> tag ki help se css ko use krte hai
//ye tmhara head tag ke ander likha jaega not in body

<!DOCTYPE html>
<html>
<head>
  <title>Internal CSS Example</title>
  <style>
    /* Internal CSS */
    h1 {                            //isko selector bolte hai (tag name){
                                                     ander properties of css
                                                                         }

      color: blue;
      font-size: 24px;
    }

    p {                                 //benefit of using inline css -yaha pure html me ek sath hum sare tag pe property laga sakte h like jitte bhi p tag use hue honge sbme css apply hojaegi selector ki help se  //ye inline me possible ni tha vaha humko individually sare tag me style attrtibute use krna padhta tha

      font-family: Arial, sans-serif;
      line-height: 1.6;
    }
  </style>
</head>

3.external css
//yaha hum .css extension ki alag se file banate h fir usko html file se link krte h using link tag
//ye code modularity ko inc krta h bcz css code alag file me rhega html slag file me //more clean code
<!DOCTYPE html>
<html>
<head>
  <title>External CSS Example</title>
  <link rel="stylesheet" href="styles.css">//ye connect krna bhot jaruri h
</head>
<body>
  <h1>Hello, External CSS!</h1>
  <p>This is an example of using external CSS.</p>
</body>
</html>

.css page
/* styles.css */

h1 {
  color: blue;
  font-size: 24px;
}

  *********************inline vs internal vs external
  //kuch principle dhyan rakhne padhte h while writing the code
  1= SRP(single responsibility principle) yani ex- jaise.html file h to vo sirf html structure krne ka kaam hi kar ri ho ,, .css file h to usme sirf styling hi ho ri ho
  ye ni hona chaiyey ki humko css me changes krne h  tb bhi html file me jana pade
  is se redability kam hoti h user ki  not good to use

  2 = dry(dont repeat yourself
  ) same line of code ko baar baar repeat mt kro

  //inline
  ye SRP and DRY  dono pripncle ko violet krta h
  bcz html page me hi css ka kaam hora h
  //yaha har tag me alag se style attribute use krna padhta h ,
  <p> tag maanlo pure code me 100 baar use kia to 100 baar ptag me style attribute daalke css apply krni padegi.. baad me koe change krne hue ex-color chnge to 100 jaga color change krna padega

  //internal
  //ye bhi SRP princliple ko violet krta h bcz <style> tag ko hum html file me hi likhte h to add css
  //but ye DRY principle follow krta h
  directly hum selector ki help se sare tag ko ek baar me target kr sakte h
  //humko 100 jaga jaake koe style attribute add ni krna padhta

  //external
  ye SRP principle ko follow krta h bcz html code alag file me hota hai aur css code alag file m
  ye DRY principle ko bhi follow krta h bcz css me selector ki help se hum sare tag ko target kr sakte h ,,indivually jaake attribute add ni krna padhta
  //readability inc and reusability also

  ********************************************************************************************************
  important 
  //which css will apply if we use three of all
  1.inline,internal,external

  <!DOCTYPE html>
<html>
<head>
  <title>Order of Appearance in CSS</title>
  <link rel="stylesheet" href="styles.css">  //external with color blue in.css file

  <style>
    h1{
        color:red;   //internal css with red color
    }
   </style>

</head>

<body>

  <h1 style ="yellow"> raghav </h1>  //inline css with yellow color
</body>
</html>

//line by line read krte hai
jo color sbse last me apply hota h vahi reflect hoga
so inline css ka color reflect hoga h1 tag me  bcz ye body tag me ata h baaki dono head tag me hi apply hojate h to end me inline css sbko override krdeta h

important note//
internal or external order of appearance pe depend krte h bcz
<head> tag me
agar hum <link rel="stylesheet"> //external css phele likhe
aur
<style>  //internal css baad me
</style> 
 
 //to jo baad me likha jata h vhi override krdeta h iscase me internall css apply hoga over external
 //but agar hum order of appearnce change krde
 <style>  //inline phele likha
    </style>

    <link rel="stylesheet">  //external baad me

    //iss case me external css apply hoga ye override krdega interla css ko


    so  ****************************************
    inline css> baaki internal or external (order of appearnce pe depend karega unki jo hum likhe )
************************************************************************************************************

//box model
//koe bhi element create karenge vo hamesha box ki  form me hi banta h(element wrap hota h box m)
devtools ki help se inspect karke dekh bhi  sakte h jaise hi content pe hover karenge devtools me box form hoga content ke around

4 important things in box model
1.content(jo hum dete hai like hellow my name is raghav)
2.border
3.padding
4.margin

Content: The actual text inside the box.
Padding: The space between the content and the border.(ye border ke inside ki spacing hoti h)
Border: The line that goes around the padding and content.//its like a boundary around over content
Margin: The space outside the border that separates the element from other elements.
(ye border ke bahar ki spacing hoti h jo between 2 different box or element space provide krta hai)

***********************note
In CSS, the total height of a box includes the content height, padding, border, and margin.
same for width we use content width,padding,border,margin
User
if we give height:100px then
ChatGPT
If you set the height of an element to 100px, it refers to the height of the content area only, not including padding, border, or margin.


********************************************************************************************************8
 
selectors in css ***
//basically hum selector use krte hai taaki hum speciific element ko target kr sake jisko humko properties deni hai

selector{
  property:value;
}


types of selectors

1.simple selector
2.combinator selectors
3.pseudo-class selector
4.pseudo-element selectors
5.attribute selector

**********************
1.simple selector me
types hote h

1.tag/element selectors-
tagname/element name ki help se particular element ko style kr sakte h 
eg- h1(tag/element name){
  property:value;
}

2.id selectors  //# use hota h for id   with idname se target krte h particular id ko
 ye unique hota h yaha id ke hisab se element ko target krte h(har element ki id unique hogi)
 jis element me vo id hogi  vo target hoga yaha tag koe bhi ho us se koe mtlab ni yaha id ke base pe target krte h elemt ko
 (#id_name){
  property:value;
 }
3.class selector // . dot use hota h for class
ye multiple element me lag skta hai but condition h sbka class name same hona chaiyey(jb group me sbko same style krna ho tb sbko same class name dedo fir sbko ek sath target kr sakte h)
//yaha bhi element/tag koe bhi ho us se mtlab ni yaha class name ke basis pe target krte h element ko not on basis of tag name.
.(classname){
  property:value;
}
4.grouping selector 
different selectors ko ek sath use kr sakte h
iski help se hum group me alag alag element/class/id ko target kr sakte h jinko same styling deni ho
#one,.two,h1,p{    //yaha id bhi h,class bhi,tag/element vhi(comma ke through separate krte h)
    color: deeppink;
}

5.universal selector // 8 is used
ye basically sare element jitte bhi present h sbko style krdeta h 
*{
  property:value;
}

6.element class selector-ye tb useful hota h jb humko koe particular class ko alag dena hota h 
like-
<p class="raghav"></p>
<p class="raghav"></p>
<p class="raghav"></p>
<span class="raghav"></span>

yaha class name sbka same h but humko sirf spantag vali class ko style krna h
agar .classname se karenge to voto sari class me apply hojaega jinka same same h
iss case me element class selector kaam aata h
syntax-
(element/tagname).(dot)(className)
span.raghav{
  color:red;
}
*********************************************************************************************************
 
2.combinator selector- basically different type of selector ko ek sth use kr sakte hai
dom structure samjhna bhot jaruri h parent child relationship
<body> //ye root element h
  <div>  //level 1 (parent )
      <p>p1</p>  //level 2(ye child element hote h)
  </div>
  
  <h1>  //level 1
     <p>p2</p>  //level2(ye child element hote h)
  </h2>
  <p>p3</p3> //level 1
</body>     

ye <div>,<h1>,<p> ye sb aapas me siblings hai bcz ye hirerchial level pe same jaga h dom me
<p> unke ander ara h vo child h
**********************
syntax to use combinator-
1.reference element(jiske ander element ko search krna h jispe styling krni h) 2.combinator symbol 3.element to select(jis particular elements me styling deni h)
like -  div~p(div container ke ander  p element ko style krna h)


types of combinator selector-

1.general siblig selector -(~) denotion  //ye dono sibling pe work krte h
isme jaise hi reference element end hoga uske aage jitte bhi siblings hai(same level)(jo humko style krne they) vo style hojaenge

example- select all paragraphs which comes inside h1
yaani h1(reference element h) jisme humko p elemenrt search krke style krna h

<div>
<h1>raghav</h1> //rule -jaise hi reference element ka end hoga (reference element  jaha bhi end ho hamesha uske baad ka next sibling hi lena hota h)
<p>p1<p>   //uske sare  siblings ko style karenge
<p>p2<p>     //uske sare  siblings ko style karenge
<span>
<p>p3</p>  //ye style ni hoga bcz ye child h(level 2) not sibling(sibling same level vale hote h)
</span>
</div>

2.adjacent sibling selector -(+) denotion //ye dono sibling pe work krte h
ye sirf ek right adjacent element ko hi style krta h not more then that(jispe styling krni h)
like h1+p{

}  agar h1 end hone ke baad next adjancent me para present h to vo style hojaega ..agar koe dusra element present hua to style ni lagegi..and agar para hamara ek step baad aya(like h2 ke baad p present h )tb bhi styling apply ni hogi
bcz isme sirf next adjacent element hi style hota h jo humne pass kia tha
<h1>1</h1>
agar <p> iske just next aage hoga to styling hogi verna ni hogi
 

*********************************************************************
3.child selector -(>) denotion //ye child pe work krte h
ye sirf unko style krta h jo isse directly connect hai no grandchild allowed

<div> parent
   <p> child  //allowd
      <span>
          <p>  //grand child(not styling done in this)
**************************************************************
4.descendant selector-( with space ) denotion. //ye bhi child pe work krta hai
ye sare  element ko style krdeta h jo directly connect ho(childs) or indirectly connect ho as a (grand child)
<div> parent
   <p> child  //allowed
  <span>
          <p>  //grand child  //allowed
********************************
syntax to use combinator-
1.reference element(jiske ander element ko search krna h jispe styling krni h) 2.combinator symbol 3.element to select(jis particular elements me styling deni h)
like -  div~p(div container ke ander  p element ko style krna h)


***************************************************************************************8888
*****************************************************************************************

3.pseudo class selectors-
ye basically use krte hai hum jab humko apne element ki state ke uper styling krni ho -clicking,hovering ,etc
temporary styling hoti h like jbtk hum hover karenge,click karenge etc tbhi tk vo styling rhti hai mouse htaya styling gayab ..
basically ye hyperlinks aur input tag me jyada use hota h 

Certainly! Here are some common pseudo-class selectors in CSS:

:hover - Styles an element when the mouse pointer is over it.
:active - Styles an element that is currently being activated (e.g., clicked).
:focus - Styles an element that has gained focus.
:visited - Styles a link that has been visited by the user.
:first-child - Selects the first child element of its parent.
:last-child - Selects the last child element of its parent.
:nth-child(n) - Selects elements that match a specific position in a group of siblings.
basically ye hyperlinks aur input tag me jyada use hota h 
 ******************8
 <anchor tag me use hone vale pseudo classes></anchor>
state of hyperlink -
1.link -ye jb page load hota hai us time ki state h (bydefault blue hota h)
2.hover -jb mouse ko hover krte hai link ke uper
3.active -jb link pe click krke rakhte h(button pressed) to ye state aati hai
4.visited-jb click ko open krdete hai yaani button released(hote hi hum link visit kr lete hai)

syntax: selector(like tag,class,id ) : pseudo-class ( like state -hover,active,visited,focus,disable etc)
(ye colon hi represent krta h pseudo class ko)

for example  a:hover{
          color:blue;   //ye btara hai jaise hi hum hover karenge link pe color blue hojaega uska
}

//input tag me bhi use aate hai 

here are some commonly used pseudo-selectors for the <input> tag:

:hover - Styles the input when the mouse is over it, helpful for visual feedback.
:focus - Styles the input when it's selected or has focus, useful for indicating where a user is typing.
:disabled - Styles the input when it's disabled, useful for visually indicating non-interactable fields.
:valid - Styles the input when its value meets the specified validation criteria (e.g., a valid email or required format).
:invalid - Styles the input when its value doesn't meet the specified validation criteria.

example -The :focus pseudo-class selector is used to style an element when it gains focus, 
typically through user interaction like clicking or tabbing onto it, making it useful for indicating where a user's attention or cursor is on a webpage, 
especially in forms or interactive elements.

<style>
        input:focus{
            background-color: green;  //jaise hi hum input box me click karenenge uska bg color change hojaega
        }
    </style>

    *********************
    4.pseudo element selector- ye element ke kuch specific part me apply kr sakte hai 
    like kisi word ka first letter bada krdiya 
    like paragraph element ki specific first line ka font change krdiya ..etc 

    important************diff between pseudo class vs pseudo element selector 

 Pseudo-class selectors target specific states of elements (like :hover, :active, :focus) based on user interaction or state changes.

Pseudo-element selectors, on the other hand, target and style a specific part of an element (like ::before, ::after, ::first-line) rather than a state, 
allowing for the creation of virtual elements or styling specific parts of an element's content.

***
syntax - we use double :: in this pseudo element selector
selector(tag name,class,id etc)::pseudo-element(like before,after etc) {
  /* Styles */
}

types-- 
here are some common pseudo-element selectors with brief explanations:

::before - Inserts content before the selected element's content.//most imp
::after - Inserts content after the selected element's content.//most imp
::first-line - Styles the first line of text within an element.
::first-letter - Styles the first letter of the text within an element.
::selection - Styles the portion of text selected by a user.
::placeholder - Styles the placeholder text in an input or textarea element.
::backdrop - Styles the background behind an element when it's presented in fullscreen mode.

example--
selector::before {
  /* Styles */
  content: ""; /* Content to be inserted */
}
selector::after {
  /* Styles */
  content: ""; /* Content to be inserted */yaha kuch bhi de sakte h - text,image.,url etc
}


**************************************************************************************
4.attribute selectors -hum elements me more styling daal sakte hai with help of attributes
********************* 

element[attribute="value"] {                   like 
  /* Styles */ 
}

ex- input[type="text"]{
  color:green;   }

 ex- a[href^="https://"] {
    /* Styles for links starting with "https://" */
  }
 wex- img[src=".png"] {
    /* Styles for PNG images */
  }
  
  
code- 
let's say you have a list of links and you want to style links that open in a new tab 
(with the target="_blank" attribute):

<!DOCTYPE html>
<html>
<head>
  <title>Attribute Selector Example</title>
  <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
  <ul>
    <li><a href="https://example.com">Normal Link</a></li>
    <li><a href="https://example.com" target="_blank">Link - Opens in New Tab</a></li>
    <li><a href="https://example.com">Normal Link</a></li>
    <li><a href="https://example.com" target="_blank">Link - Opens in New Tab</a></li>
  </ul>
</body>
</html>
 //css 
 /* Styles links with target="_blank" attribute */
a[target="_blank"] {     //yha humne sare link pe styling applly krdi with help of attribute selector
  color: red;
  font-weight: bold;
  text-decoration: underline;
}
***********************************************************************************
****************************************************************************************8
*******************selectors over *********************************************************

positions in css  //most important topic of css 
-positions ki help se hum elements ko kisi bhi jaga move krva sakte hai makes content more beautifull 
flexbox and grid ek fix symmentry me hi content ko arrange kr sakte hai like x-axis and y-axis ..isse content thoda less styllish dikhta h 
positions ki helps se kisi bhi directions me arrange kr sakte hai  

types of positions 
1.sticky-by default position hoti hai ye element ki 
yaha hum top down right direction use ni kr sakte yaha kaam ni karega 

2. relative- ye bhi element ki original position show krta hai(jo html me pass hoti h) but yaha pe hum top,down,right,left direction me
 element ko move karva sakte hai ()
//yaha order of element same rhta hai like 3 box they 1,2,3 
humne 2nd box ko right move krdia ekdm //iscase me bhi neeche ka box3 uski jaga ni lega uper move krke 
//bcz relative property use krne se memory space maintain(reserve) rhta hai element  ka

3.position absolute - ye bhi same relative ki trah hai but yaha jo position move hoti hai vo hamesha nearest parent container ke acc hoti hai 
//yaha ordering(natural flow of document) maintain ni rhta //agar ek box ko move kia to remaining box uski place lelete hai yaha overlaping hojati h  yaha box ki fixed memory reserve ni hoti
<body>
     <div-parent>
          <div-absolute>box</div-absolute>  ///yaha jo bhi movement hoga vo with respect to parent container hoga 
                                             like top=10px dia to ye parent container ke top se 10px move hoga absolute
     </div-parent>
</body>

important--humhe parent class ko relative banana hoga hamesha tbhi hum absolute property use kr sakte hai for positioning 
//agar bychance parent container nhi hua ya usko relative property ni di 
//is case me <body> as a parent work karegi bcz sare element usi ke ander bane h 
  //iscase me hamara absolute ka box puree body me move karega jitti humhe screen visible hai like agar top=10px dia to ye body containerbox se hamara absolute 10px move hoga top se

  4.fixed- ye hamesha screen pe fix hojaega jitta hum isko  value denge(top,left.right,bottom se) ..us value ke according ye apni position pe move krkepe fix hojata hai 
  chahe hum kitta bhi scroll kare vo fixed rhega ..
  imp ---yaha jo value dete h vo according to viewport hoti hai like agar top se 10px dia to hamara jo box hai vo viewport se 10px move hoga ..

  5.sticky- ye combination hota hai relative + fixed position ka 
  //ye starting me apni normal position me rhta hai jaise relative rhta hai
  //maanlo 3 box they humne box 1 ko move kia kisi direction me //to uski jaga koe dusra box ni lega //memory reserved rhti hai us box ki bhale hi vo dusri jaga move krgya ho 
  //ye order(natural flow of document ) maintain rakhta hai  as relative positioning 

  //it is also work as fixed bcz jis box me positioning di thi vo apni place pe fix hojaega //
  //most important point -hamara sticky as a fixed tb behave krna shru karega -jb maanlo humne top=10px pass kia tha 
  //to jaise hi viewport se hamare box(jisko position sticky di) ka distance 10px hua top se , hamara box fixed hojaega usi time..
  //top ki value pass krna jaruri hai sticky ke case me...tbhi vo threshold meet hone pe fixed banega.
  baaki box move karenge(jb hum scrolling karenge) bus vo particular box jispe sticky position di hai vo move ni karrega ****until its parent container end//imp 
  jaise hi parent container ke bahar gye hum scroll krte krte sari properties remove hojaengi 
<body>
  <sticky-container>  //parent container
      <box1>
           box  -//is box pe sticky property di -/jbtk hum apne parent container ke ander hai tbtk sticky property work krti hai
      </box1>
  </sticky-container>
</body>

*******************************************************************************************8
********************************************************************************************
//important topic 
//specificity in css 
 
cascading style sheet 
//cascading means - jub hum same element ke uper different different css ki properties ko apply krdete hai 
un conflicts ko kaise handle krna hai ye cascading algorithm ki help se hota hai 

ab browser ko kaise pta lagega which css to apply 
uske liye 4 stages check hoti hai 
//4 stages of cascading ---

1.position/order of appearance -like jo last me styling apply hui vo show hogi -

2.specificty - it is a scoring system which is applied on selectors //
har selector ko kuch score dia jaata hai jitta jyada score utti jyada priority uski ..

3- origin - -ye btata hai css kaha se apply hui h 
     like -i broweser(user agent stylesheet) css -kuch css browser(like chrome) khud deta hai(jaise humne koe div banaya to usme bydeault phele se padding,margin ,some font size,color etc hoti h...h1 tag ka font bada hoga p se bydefault)
     ii-os css -os deta ha kuch css style like mac me kuch text likhte hai to uska font style thoda alag rhta hai as compared to windows 0r linux.
     iii-authored css - ye user applly krta hai 

     ***authored css > highest priority then other(browser or os) but agar browser ki property me !important laga h to us se jyada priority kisi ki nhi usko koe ni  change kr sakta ..
     *****most imp
order-- browser>os>author(user) >authored css !important > os css  !important >> browsercss !important(most priority).
***
4-important  - !important (ye jis property ke aage likh dia uski property hi apply hogi most ppriority !important ko di jaati hai css me)

*********************************************************************************************************88888
******************************************************************************************************

inheritance in css
__________________ 

isme basically child apne parent ke color ko automatically inherit krleta hai 

like - 
<body >
   <ul>
      <li>list items </li>   yaha <li> apne parent ka color inherit karlega
                            //agar humne ul me koe color ni dia tha is case me ul apne parent yaani <body > se color inherit karta h hamesha
                              //aur vohi same color ul  se li me inherit hojaega 
                              //by default body ka color black hota hai isliye jb bhi hums list create krte hai vo black color me banti h ..
   </ul>
</body>

********************************************************

z-index  - //important
_______ 
ye overlapping ke case me bhot jyada kaam aata hai 
like hamare pass ek logo hai aur ek background image --- 
problem aari hai ki hamara logo  background image ke neeche chala gya hai (yaani bg-image ne overlap krlia logo ko) 
//is case me z-index kaam aaega 
//jiska z index jitta jyada hoga vo cheez uttni uper rhegi  
like 3 box hai 1,2,3 respectively ,, box1-zindex =1 ,,box2 = zindex=2,, box3 zindex = 0 ;;
yaani -- overlapping condition me box2 sbse uper hoga uske neeche box1 hoga sbse neeche box3 hogaa 

///note - hamesha position property use krni padegi jb z-index use karenge 
//static position XXXX kbhi ni use hoga 
//mainly absolute lete h per relative bhi le sakte hai 

************************************************************
**************************************************************
display properties 
___________________ - 

1.block - ye hamesha new line se start hoga ..complete width leleta hai screen ki.
       like div 

2.inline - ye new line se start ni hota ..jitte content ki width hogi utti hi space lega sirf
like span tag 
3.inline-block  - same as inline  but ek bhot major difference hai inline vs inline-block me 


inline me hum kabhi bhi width and height ni de sakte content ko //major drawback 
//inline-block and block display property me height and width de sakte hai //isiliye ye dono jyada use hote hai 

//note - hum kisi bhi element ki display property ko  change kr sakte hai 
like div hamara block  element hota ha 
per agar hum 
div{
  display:inline ;  //krde to vo as a inline behave krne lagega ..same hum inline element ko block me convert kr sakte h 
}

***************************************************************
https://www.freecodecamp.org/news/css-flexbox-tutorial-with-cheatsheet/

flexbox //most important -  basically ye bhi ek display property hai iski help se hum layout(blue print) bana sakte h ki hamara content kaise arrange hoga 
_______
used to create 1d layouts -means ya to row me content arrange hoga or ya column me(dono me se ek at a time use hora hoga) aisi condition me flexbox use hota hai 
like- navbar -isme ek row me sara content arrange hoga 
//grid helpful hai 2d layout banane me - jaha ek sath row and columns use hote hai 
like restraunt list of swiggy -vaha bhot sari rows and columns use hue hai to show all list of restaurant..


_**************______properties of flexbox: 
//note - ye sari properties parent(nearest) container pe lagti hai jo hamare child ka h jispe property deni hai
1.display:flex; propertiy likhni padegi to use flexbox in your code //parent container me 

2.flex-direction- is se hum content ko rowwise ya column wise arrange kr sakte h 
1 baar me ek hi direction me arrange hoga bcz 1d layout hota h flex 
bydefault-jb hum flex use krte hai to vo row direction me hi rhta hai ..
flex-direction:row or column or row-reverse or column-reverse //
__________________________________________________________________________________________________
3.flex-wrap property - maanlo humne 4 box banaye vo 100%width lere hai container ki 1 row me
ab humne  4 box aur add kiye to flex ki ek ye dikkat hai ki  vo us 4 new box ko bhi same hi row me add krdega 
jo already 100%width le chuke they container ki //vo new boxes ko 2nd row me ni daalta 
//isi liye wrap property aaii 

flex-wrap:wrap //ye kr denge to new content dusri line me ajaega khud agar 1st row ki width 1005 use hogyi hogi 
like 6 box they 1,2,3,4,5,6 
by default flex-wrap:no-wrap; property use krta tha jisme sare box 1 line me ajate they 
row1- box1 box2 box3 box4 box5 box6 ;

jaise hi humne flex-wrap:wrap ; kia 
boxes new rows me move hojate hai  acc to width given .
 row1- box1 box2 box3 
 row2 - box4 box5 box6

flex-wrap:wrap-reverse; - isme boxes new rows me ho hote hai but unki order reverse hojata hai 
like row1    box 6 box 5 box 4 
     row2    box3  box3  box 1
____________________________________________________________________________________________________

4.flex-flow-shorthand notation hai flex direction and flex wrap ki 
flex-flow: row wrap ;

_________________________________________________
5.justify-content //most important in flexbox 
iski help se hum elements ko  arrange krte hai  in flexbox with respect to x-axis(main) direction.

justify-content:start ;//
justify-content:end;
justify-content:center; 
justify-content:space-around;
justify-content:space-between 
justify-content:space-evenly .

use this link -https://www.freecodecamp.org/news/css-flexbox-tutorial-with-cheatsheet/

*
______________________________________________________________________________________________

6.align-items - yaha elements ko arrange kr sakte hai flexbox me with respect to y-axis(cross).
align-items:strech,flex-start,flex-end,center .

interview question - koe puche ki  hum flexbox me element ko center me kaise arrange kr sakte hai 
with respect to x axis-direction and also y axis -direction both.

ans - justify-content:center;krdo
     align-items :center krdo ;
or
  
     *****
 one issue with align-items property [ye sirf jb single row hogi tbhi kaam krta hai 
 yaani jb flex-wrap:no-wrap ;hoga tbhi kaam krta hai
******************************************
for center the element on x and y axis both


  shorthand  - place-content: center               center;
                            (ye align content )  (ye justify content)
  __________  flex-wrap:wrap hona chaiyeye(for align content) ____
  
  
  ___________________________________________________________________________
7.align-content - tbhi aya bcz ye sirf multiple rows ke sath kaam karta hai --flexwrap ki help se bhi hum element ko next row me shift krke bhi align content ko use kr sakte hai //agar multiple rows ni thi to.
y-axis ke according//

..agar align content ki help se center krna hai to 
note - yaha flex-wrap property ka hona must hai with value wrap or wrap-reverse ..tbhi ye work karga ..

//properties of align-content same rhti hai as justify-content 


align-content:strech or flex-start or flex-end or center or space-between or space-evenly orspace-around ..
______________________________________________________---
some terminologies we seen ****
justify hai to --vo x -axis pe kaam krta hai 
align - y -axis 
items - single row/column 
content -multiple rows/colms
_____________________________________________________________________________
8.gap property 
row-gap -2 rows ke between ka gap inc krdega 
column-gap -columns ke bech ka space inc krdega 

gap: 50px 10px ;aise bhi dete hai 
    first row ka gap and sencond column ka gap .

 ___________________________________________________________________________________________   
 *********most important baat 
maanlo hum flex ki direction  row se column me change krde 
is case me x-axis aur y-axis ki direction bhi  change hojaati hai 
yaani jo properties phele hum x-axis ke liye use kr re they(like justify-content) vo direction:column hone ke baad 
ab y-axis pe styling krne ke kaam aaengi (ab justify-content se y-axis pe element arrange honge flexbox me)

same for other 
like jb flex-row hota tha 
tb align items y-axis me items ko arrange krne ke kaam aata tha 

per jaise hi flex-direction-column kari 
ab align-items/content - ye sb x-axis pe items ko arrange karenge flexbox me 

bhot importanthai ye samjhna ///////////////////////
______________________________________________________________________________________-----

  //ye property child items me apply hoti hai flexbox me 
  ______________________________________________________
  9-flex-grow - is se flex-items ka size inc kr sakte hai 
  particular kisi flex-item(child element) ka bhi kr sakte hai id ya class dedo fir usko target krke flex-grow property dedo
  10-flex-shrink-ye size kam kr deti hai 

  __________________________________________________________________________________
  ((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))))))))))))))

  grids layout //important
  __________________________ 

  ye 2d layout hota hai yaha multiple rows and columns ko ek sath layout kr sakte hai 
  //flexbox hamara 1d strucutre tha vaha single row ya single column pe hi layout bana sakte they 
  bcz 1d tha -ya to row pe flexbox use kr sakte thry ya column pe dono pe ek sath styling possible 
  ni thi flexbox me  
  tbhi grid aya yaha hum rows and column dono pe ek sath styling kr sakte hai .

  //yaaha bhot sari properties hoti hai -
  grid-template-column: 25% 25%(iska mtlab hua 2 column banengi with 25% width of container each)
  or repeat(2,25%) ye bhi same kaam karega

  //imp concept
  justify-content and align content ye parent pe lagti hai properties 
  yaani jb styling karenge to parent container move karenge 

  ...and justify-items and align-items //child items pe lagti hai properties 
  yaha jb styling karenge to parent container ke ander jo child element haii vo move honge///
  yaha container ki position ni  change hori hoti bcz ye child element pe properties apply hoti h1
  child element style hote hai ...
  __________________________________________________________________________________


  responsive web design
  ______________________ 

  apni website ko responsive banana jaruri hai like hamari website laptop screen pe shi kaam kr ri hai 
  per usko phone screen pe open kare to vo break hoja ri h to aisi website user experince kharab karegi 
  bcz jaruri ni user har time same device se login krde

  to yaha hum media query ki help lete hai 
  iski help se hum  apni website ko responsive bana sakte hai 
  like yaha hum breakpoint set krdete hai according to screen size 

  320-480px = mobile phones 
  481-768px = ipads,tablets 
  769-1024px= small screeens and laptops 
  1025-1200px = desktops,large screen 
  1201px --so on = extra large screen like big monitors

  jaise hi ye aspect ratio hit hoga hamari site auttomatically screen ke according interface ko  change kr legi ..
  

  _______________________________________________________________________________________________
  MEASUREMENT UNITS IN CSS 
  ________________________  

  two types ki  measurement unit hoti  hai  css me 
  1.absolute - ye kisi dusre pe depend ni  rhti .fixed(static)size rhta hai 
  like agar screen size change kare laptop se mobile pe tb bhi ye fix size hi lega according to 
  screen size change ni hota ..
  example - px ,cm,mm 

  2-relative units - ye screen size pe dependent rhti hai ye fixed ni hoti 
  like agar laptop screen se mobile screen pe gye to ye automatically apne size ko  adjust krleti hai
  example - em , rem , % ,vh,vw

  note- bydefault(background) ye sari relative units end me px me hi convert hojatti hai bcz browser ko vohi language samj aati hai
  relative units dynamic hoti hai screen size ke according to humko faida milta hai responsive design banane me 
  

  *em = its takes px according to its parent container 
  ex - 
  <head> //iska font-size bydefault 16px hota h jisko change bhi kr sakte hai 
    <body> //iska bhi bydefault 16px hota h
       <div > //yaha humne 3em dia fontsize  // to ye convert hoga 3*16px(parent containe) = 48px
           <p>//yaha dia 2rem fontsize //ye convert hoga 2*48px(parent) = 96px

   *rem = ye tmhara root element ke base pe   value leta hai 
   
   ex - 
   <head> -ye rootelement hota hai (body bhi as a root kaam kr sakti h) //bydefault 16px fontsize
       <body> 
          <div > //maanlo yaha 2rem dia font size =ye convert hoga 2*16px = 32px
             <p>//yaha dia 3rem //ye bhi acc to root element value lega 3*16px = 48px

   vh and vw = viewport(complete screen) ki height and width 
   ye tmhare vh and vw according to viewport size apne ko change krte hai 
   like viewport height and width = 400px 
     humne di 
         div - height = 25%vh and 25%vw 
           yaani 400px ka 25% hua 100px to 
           div ka height width hoga 100px          


     difference betweeen % and vw or vh 
    
Parent Dependency:
Percentage: Relative to the size of the containing (parent) element.
Example: If a container has a width of 400 pixels, setting
 a child element's width to 50% would make it 200 pixels wide (50% of the container's width).

Viewport Width: Relative to the width of the viewport (browser window).
Example: If you set an element's width to 50vw,
 it means the width of that element will be 50% of the viewport's width.
Responsive Behavior:
Percentage: Responsiveness depends on the size of the containing element.
Viewport Width: Provides responsiveness based on the size of the viewport.
   
_______________________________________________________________________________________________

transitions and animations 
________________________________ 

basically transitions ki help se hum some duration period ke liye element ki properties me change 
karva sakte hai smoothly 

transition: shorthand to all properties 
            height,width,background-color, 5s ,       ease,             2s; //abhi ye bg-color me transition apply hoga
            (property)                  (duration) (timing-function)  (delay)
            note - agar har property me ye transition lagani hai to har property ke baad duration,timing-function,delay likhna padega 
            transition: height,5s,ease,2s,width,5s,ease,2s,vackground-color,5s,ease,2s;

transition-property: kis css property me transition lagana hai 
transition-duration: kitte time tk transition run hoga(whole time to complete full transition effect)
transition-timing-function:specifices speed curve to transition (like start me slow end me fast or pura fast krdo etc).
                           (bhot alag alag hoti h  - ease ,linear,ease-in etc)

transition-delay: timer laga sakte h kitte delay ke baad transition start karna hai 

//
animation vs transitions ---
transition me hum ek baar me sirf ek effect laga sakte hai element pe 
like hover ke baad color red hogya blue se 
hum aisa ni  kr sakte start hote time color  blue ho ,beech me red hojaye,end hote-hote green color 

ye sb cheez hamari animations me possible hai *
________________________________________________________________________________________________

animations 
____________

@keyframe animation_name{
  properties
}
here's a brief explanation of key CSS animation properties:

animation-name:
Specifies the name of the @keyframes rule that defines the animation's behavior.

animation-duration:
Sets the total duration of the animation in seconds or milliseconds.

animation-timing-function:
Defines the pacing of the animation, determining how intermediate values are calculated.

animation-delay:
Specifies the delay before the animation starts, in seconds or milliseconds.

animation-iteration-count:
Sets the number of times the animation cycle should repeat, or infinite for indefinite repetition.

animation-direction:
Defines whether the animation should play in reverse after each cycle or alternate back and forth.

code- 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    @keyframes scaleAnimation {  //yaha keyframes ki help se btate hai kitte percentage pe element pe 
                                 kya changes daalne hai animations ki help se
      0% {
        transform: scale(1);    //start time  (jb animation 0%complete thi(yaani start ni thi))
                                    size bada kia box ka with bg color chnage
        background-color: red;
      }
      50% {
        transform: scale(1.5);//transfrom property
        background-color: yellow;   //middle me (jb animation 50%complete hui)
                                           jb animation pauchegi tb size aur inc with color change
      }
      100% {
        transform: scale(1);    //end aate time (jb animation 100%complete hogyi)
                                      size vaps dec with color change
        background-color: blue;
      }
    }
   //ye div box hai hamara
    .box {  //properties hamesha element container pe lagai jaegi jisme animation lagani hai 

      width: 100px;
      height: 100px;
      background-color: red;
      animation-name: scaleAnimation;
      animation-duration: 3s;
      animation-timing-function: ease-in-out;
      animation-delay: 1s;
      animation-iteration-count: infinite;
      animation-direction: alternate;
      animation-fill-mode: both;
      animation-play-state: running;
    }
  </style>
</head>
<body>
<div class="box"></div>  //ye humne ek div box banaya tha jisme animations lagani thi
</body>
</html>

___________________________________________

transform property_________________
______________________________________________ 

transform property ki  help se hum element ko change kr sakte hai
The transform property in CSS is a versatile property used to apply various transformations to an element.
 It allows you to modify the position, size, and rotation of an element.

 animation ki help se some duration ke liye hum element ko visually change kr sakte they sirf 
 like -color change.,animation speed change,etc 


Basic Syntax:
css

transform: transform-function;

Common Transform Functions:
______________________________

translate(x, y):
Moves the element along the x-axis and y-axis.
Example: transform: translate(20px, 30px);
agar particular 1 direction me change krna hai to 
transalateX ya translateY bhi  use kr sakte hai

scale(x, y):
Changes the size of the element along the x-axis and y-axis.
Example: transform: scale(1.5, 1.2);

rotate(angle):
Rotates the element by a specified angle in degrees.
Example: transform: rotate(45deg);

skew(x-angle, y-angle):
skew() function is used to skew (tilt) an element along the horizontal and/or vertical axis. 
Skews the element along the x-axis and y-axis.
Example: transform: skew(20deg, 10deg);

matrix(a, b, c, d, e, f):
Allows you to use a 2D transformation matrix for more complex transformations.
Example: transform: matrix(1, 0.5, -0.5, 1, 20, 10);

_____________________________________________________________________________________________________



